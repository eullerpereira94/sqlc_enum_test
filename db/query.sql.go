// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package db

import (
	"context"

	"github.com/eullerpereira94/sqlc_enum_test/types"
)

const getBoxes = `-- name: GetBoxes :many
SELECT id, name, color FROM boxs
WHERE 
CASE
	WHEN $1 :: colors != null THEN
		color = $1
	ELSE true
END
`

func (q *Queries) GetBoxes(ctx context.Context, color types.NullColors) ([]Box, error) {
	rows, err := q.db.QueryContext(ctx, getBoxes, color)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Box
	for rows.Next() {
		var i Box
		if err := rows.Scan(&i.ID, &i.Name, &i.Color); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
